defaults: &defaults
  docker:
    - image: circleci/node:9.2

  working_directory: ~/repo

version: 2

jobs:
  dev:
    <<: *defaults

    environment:
      RFG_LOCAL_API_URL: https://dev.rollforguild.com
      RFG_GOOGLE_TAG_MANAGER_ENV: development

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: yarn run build

      - add_ssh_keys

      - run:
          name: Keyscan (HACK)
          command: ssh-keyscan -H $DEV_DEPLOY_HOST >> ~/.ssh/known_hosts

      - run:
          name: Install rsync
          command: sudo apt-get update -qq && sudo apt-get install -y rsync

      - run:
          name: Deploy to dev.rollforguild.com
          command: rsync -r --delete-after --quiet ~/repo/ $DEV_DEPLOY_USER@$DEV_DEPLOY_HOST:$DEV_DEPLOY_FOLDER

  prod:
    <<: *defaults

    environment:
      RFG_LOCAL_API_URL: https://rollforguild.com
      RFG_GOOGLE_TAG_MANAGER_ENV: production

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: yarn run build

      - add_ssh_keys

      - run:
          name: Keyscan (HACK)
          command: ssh-keyscan -H $DEPLOY_HOST >> ~/.ssh/known_hosts

      - run:
          name: Install rsync
          command: sudo apt-get update -qq && sudo apt-get install -y rsync

      - run:
          name: Deploy to rollforguild.com
          command: rsync -r --delete-after --quiet ~/repo/ $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_FOLDER

workflows:
  version: 2

  dev-deploy:
    jobs:
      - dev:
          filters:
            branches:
              only: develop

  prod-deploy:
    jobs:
      - prod:
          filters:
            branches:
              only: master
      # - dev-deploy:
      #     requires:
      #       - build
      #     filters:
      #       branches:
      #         only: develop
