defaults: &defaults
  docker:
    - image: node:alpine

  working_directory: ~/repo

jobs:
  prebuild:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

  test:
    <<: *defaults

    steps:
      - run:
          name: Run tests
          command: yarn test

  dev-build:
    <<: *defaults

    environment:
      RFG_LOCAL_API_URL: https://dev.rollforguild.com
      RFG_GOOGLE_TAG_MANAGER_ENV: development

    steps:
      - run: yarn run build

  prod-build:
    <<: *defaults

    environment:
      RFG_LOCAL_API_URL: https://rollforguild.com
      RFG_GOOGLE_TAG_MANAGER_ENV: production

    steps:
      - run: yarn run build

  predeploy:
    <<: *defaults

    steps:
      - add_ssh_keys

      - run:
          name: Keyscan (HACK)
          command: ssh-keyscan -H $DEV_DEPLOY_HOST >> ~/.ssh/known_hosts

      - run:
          name: Install rsync
          command: sudo apt-get update -qq && sudo apt-get install -y rsync

  dev-deploy:
    <<: *defaults

    steps:
      - run:
          name: Deploy to dev.rollforguild.com
          command: rsync -r --delete-after --quiet ~/repo/ $DEV_DEPLOY_USER@$DEV_DEPLOY_HOST:$DEV_DEPLOY_FOLDER

  prod-deploy:
    <<: *defaults

    steps:
      - run:
          name: Deploy to rollforguild.com
          command: rsync -r --delete-after --quiet ~/repo/ $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_FOLDER





workflows:
  version: 2

  deploy-to-dev:
    jobs:
      - prebuild
      - dev-build:
          requires:
            - prebuild
      - test:
          requires:
            - dev-build
      - dev-deploy:
          requires:
            - test
          filters:
            branches:
              only: develop

  deploy-to-prod:
    jobs:
      - prebuild
      - prod-build:
          requires:
            - prebuild
      - test:
          requires:
            - prod-build
      - prod-deploy:
          requires:
            - test
          filters:
            branches:
              only: master
